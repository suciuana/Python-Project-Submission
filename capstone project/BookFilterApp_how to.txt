To use:

In order to use the app, user has 2 options: 
1. Run the final script (Book_Filter_App.py) as it is after downloading all the files in a single folder
2. For the newest book updates, user needs to: 
- make sure no generated file from the "Codes and results" listed at the end of this document are present in the downloaded folder before running any script
a. run again the first part of the code (data collection.py), then the final part (Book_Filter_App.py) - only for book review/suggestions
OR
b. run each script from "Codes and results" listed at the end of this document in the specified order - for complex book data analysis as per the given requirements in the Capstone project (this option is needed ONLY if the user wants to check if there were any changes on the website regarding the books scrapped)

How to: 
    Run the script
    Use the filters (optional):
        Select genre from dropdown
        Enter price range (must be positive numbers)
        Select minimum rating (1-5)
        Choose sort order
    Click "Apply Filters" to see results
    Click "Reset" to clear all filters

In case the user needs a random book suggestion: 
    Select a genre from the dropdown (or leave it as 'All' for any genre).
    Click the "Suggest Random Book" button.
    See a random book suggestion from the selected genre (or from all books if 'All' is selected).

*The random selection is truly random, using pandas sample method, which ensures an unbiased selection from the available books.
*The application will create a log file ('book_filter_app.log') to track any errors that occur during operation.

Codes and results: 
1. data collection.py -> generates csv "scraped_books.csv" file
2. data processing.py -> clears and generates 2 files: "book_analysis.xlsx" (generates different analysis based on the book data: how many books are per genre and their details, price analysis and top books) and "cleaned_books.csv" (makes sure the data is in a clean format to be worked with)
3. error handling_BookFilterApp.py -> generates a log file that tracks code errors occurred during operation; it will also pop a GUI interface with the given message of "no books found", but it just needs to be closed as it is the partial version
4. Book_Filter_App.py -> final script that generates the GUI interface for user with the specified requests


